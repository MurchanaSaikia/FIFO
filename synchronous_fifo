module SYNC_FIFO(
 clk_i,rst_i,wr_enable_i,rd_enable_i,
 wr_data_i,rd_data_o,full_o,empty_o,wr_error_o,rd_error_o
    );
    integer i;
     parameter depth=16,width=8,ptr_width=4;
    input clk_i,rst_i,wr_enable_i,rd_enable_i;
    input [width-1:0] wr_data_i;
    output reg [width-1:0] rd_data_o;
    output reg full_o,empty_o,wr_error_o,rd_error_o;
    reg wr_toggle_f,rd_toggle_f;
      reg [ptr_width-1:0] rd_ptr,wr_ptr;
    reg [width-1:0] fifo_mem [depth-1:0];
    always @(posedge clk_i)begin
       if (rst_i==1) 
          begin
             rd_ptr=0;wr_ptr=0;wr_toggle_f=0;rd_toggle_f=0;
             rd_data_o=0;
             full_o=0;empty_o=1;wr_error_o=0;rd_error_o=0;
             for(i=0;i<depth;i=i+1)
                 begin
                    fifo_mem[i]=0;
                 end
           end
        else
           begin
              if(wr_enable_i==1)
                 begin
                   if(full_o==1)
                      begin
                         wr_error_o=1;
                      end
                      
                    else
                       begin
                          fifo_mem[wr_ptr]=wr_data_i;
                          wr_error_o=0;
                          if(wr_ptr==depth-1)begin
                             wr_toggle_f=~wr_toggle_f;
                          end
                          wr_ptr=wr_ptr+1;
                          
                       end
                  end
                 if(rd_enable_i==1)
                                   begin
                                     if(empty_o==1)
                                        begin
                                           rd_error_o=1;
                                        end
                                        
                                      else
                                         begin
                                            
                                            rd_data_o=fifo_mem[rd_ptr];
                                            rd_error_o=0;
                                            if(rd_ptr==depth-1)begin
                                               rd_toggle_f=~rd_toggle_f;
                                            end
                                            rd_ptr=rd_ptr+1;
                                            
                                         end
                                    end
           end
    
    end
    
    always @(rd_ptr,rd_toggle_f,wr_toggle_f,wr_ptr)
     begin
     empty_o=0;
     full_o=0;
     if(rd_ptr==wr_ptr)begin
     if(rd_toggle_f==wr_toggle_f)empty_o=1;
     if(rd_toggle_f!=wr_toggle_f)full_o=1;
     end
 
    end
 endmodule
